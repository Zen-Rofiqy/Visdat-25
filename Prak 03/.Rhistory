geom_treemap_text(colour = "white",
place = "centre",
size = 15)
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "centre",
size = 15) +
theme(legend.position = "none")
ggplot(df, aes(area = value, fill = value, label = group)) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "centre",
size = 15)
ggplot(df, aes(area = value, fill = value, label = group)) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "centre",
size = 15,
grow = TRUE)
ggplot(df, aes(area = value, fill = value,
label = group, subgroup = subgroup)) +
geom_treemap() +
geom_treemap_subgroup_border(colour = "white", size = 5) +
geom_treemap_subgroup_text(place = "centre", grow = TRUE,
alpha = 0.25, colour = "black",
fontface = "italic") +
geom_treemap_text(colour = "white", place = "centre",
size = 15, grow = TRUE)
ggplot(df, aes(area = value, fill = value, label = group)) +
geom_treemap() +
geom_treemap_text(colour = c(rep("white", 2),
1, rep("white", 6)),
place = "centre", size = 15) +
scale_fill_viridis_c()
ggplot(df, aes(area = value, fill = group, label = value)) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "centre",
size = 15) +
scale_fill_brewer(palette = "Blues")
# Simulasi data mirip dengan Nightingale dataset
set.seed(123)
nightingale_sim <- data.frame(
Month = rep(month.abb, 2),  # 12 bulan, 2 periode
Year = rep(c(1854, 1855), each = 12),
Disease = sample(50:150, 24, replace = TRUE),  # Kematian karena penyakit
Wounds = sample(10:50, 24, replace = TRUE),    # Kematian karena luka
Other = sample(5:30, 24, replace = TRUE)       # Kematian lainnya
)
# Ubah data ke long format
nightingale_long <- nightingale_sim %>%
pivot_longer(cols = c(Disease, Wounds, Other), names_to = "Cause", values_to = "Rate") %>%
mutate(
Month = factor(Month, levels = month.abb),  # Urutan bulan
Period = ifelse(Year == 1854, "April 1854 to March 1855", "April 1855 to March 1856")
)
# Plot Nightingale Chart (Coxcomb Chart)
ggplot(nightingale_long, aes(Month, Rate, fill = Cause)) +
geom_col(width = 1, position = "identity") +
coord_polar() +
facet_wrap(~Period) +
scale_fill_manual(values = c("skyblue3", "grey30", "firebrick")) +
scale_y_sqrt() +
theme_void() +
theme(
axis.text.x = element_text(size = 9),
strip.text = element_text(size = 11),
legend.position = "bottom",
plot.background = element_rect(fill = alpha("cornsilk", 0.5)),
plot.margin = unit(c(10, 10, 10, 10), "pt"),
plot.title = element_text(vjust = 5)
) +
ggtitle("Simulated Nightingale Chart: Causes of Mortality in the Army")
# Data
set.seed(1)
x <- sample(1:400, size = 100)
y <- sample(1:400, size = 100)
dist <- sqrt((x - 200) ^ 2 + (y - 200) ^ 2)
df <- data.frame(x, y, dist = dist)
# install.packages("ggvoronoi")
# install.packages("ggplot2")
library(ggvoronoi)
install.packages("ggvoronoi")
# install.packages("ggvoronoi")
library(ggvoronoi)
install.packages("ggvoronoi")
install.packages("ggvoronoi")
chooseCRANmirror()
install.packages("ggvoronoi")
devtools::install_github("garretrc/ggvoronoi")
# install.packages("ggvoronoi")
# devtools::install_github("garretrc/ggvoronoi")
library(ggvoronoi)
ggplot(df, aes(x, y)) +
stat_voronoi(geom = "path")
# install.packages("plotly")
library(plotly)
# Create data
data <- list(
label = c("A", "B", "C", "D"),
parent = c("", "A", "A", "B"),
value = c(10, 20, 30, 40)
)
data<-data.frame(data)
# Create sunburst chart
fig <- plot_ly(data, ids = ~label, labels = ~label,
parents = ~parent, values = ~value,
type = 'sunburst')
fig
# Sample hierarchical data (Organization Structure)
data <- list(
id = c("CEO", "HR", "HR-Manager", "HR-TeamLead", "HR-Staff", "Finance",
"Finance-Manager", "Finance-Accountant", "Finance-Analyst", "IT",
"IT-Manager",
"IT-Developer", "IT-QA"),
parent = c("", "CEO", "HR", "HR", "HR", "CEO", "Finance", "Finance",
"Finance", "CEO",
"IT", "IT", "IT"),
value = c(1, 1, 3, 10, 1, 1, 1, 4, 2, 1, 1, 6, 3)
)
data<-data.frame(data)
# Create sunburst chart for organization structure
organization_sunburst <- plot_ly(data, ids = ~id, labels = ~id, parents = ~parent,
values = ~value, type = "sunburst")
# Display the chart
organization_sunburst
# Sample hierarchical data (File System Usage)
data <- list(
id = c("Root", "usr", "usr-bin", "usr-lib", "usr-local", "home", "home-user1",
"home-user2", "home-user3", "var", "var-log", "var-tmp", "var-cache"),
parent = c("", "Root", "usr", "usr", "usr", "Root", "home", "home", "home", "Root",
"var", "var", "var"),
value = c(100, 50, 30, 20, 10, 50, 20, 15, 15, 30, 25, 15, 10)
)
data<-data.frame(data)
# Create sunburst chart for file system usage
file_system_sunburst <- plot_ly(data, ids = ~id, labels = ~id, parents = ~parent,
values = ~value, type = "sunburst")
# Display the chart
file_system_sunburst
ggplot(df, aes(x, y)) +
stat_voronoi(geom = "path") +
geom_point()
ggplot(df, aes(x, y)) +
stat_voronoi(geom = "path",
color = 4,      # Color of the lines
lwd = 0.7,      # Width of the lines
linetype = 1) + # Type of the lines
geom_point()
ggplot(df, aes(x, y, fill = dist)) +
geom_voronoi() +
geom_point()
ggplot(df, aes(x, y, fill = dist)) +
geom_voronoi() +
stat_voronoi(geom = "path") +
geom_point()
ggplot(df, aes(x, y, fill = dist)) +
geom_voronoi(alpha = 0.75) +
stat_voronoi(geom = "path") +
geom_point()
ggplot(df, aes(x, y, fill = dist)) +
geom_voronoi() +
stat_voronoi(geom = "path") +
geom_point() +
scale_fill_gradient(low = "#F9F9F9",
high = "#312271")
ggplot(df, aes(x, y, fill = dist)) +
geom_voronoi() +
stat_voronoi(geom = "path") +
geom_point() +
theme(legend.position = "none")
# Circle
s <- seq(0, 2 * pi, length.out = 3000)
circle <- data.frame(x = 120 * (1 + cos(s)),
y = 120 * (1 + sin(s)),
group = rep(1, 3000))
ggplot(df, aes(x, y, fill = dist)) +
geom_voronoi(outline = circle,
color = 1, size = 0.1) +
scale_fill_gradient(low = "#B9DDF1",
high = "#2A5783",
guide = FALSE) +
theme_void() +
coord_fixed()
# install.packages("ggwordcloud")
library(ggwordcloud)
install.packages("ggwordcloud")
thankyou_words_small
# install.packages("ggwordcloud")
library(ggwordcloud)
df <- thankyou_words_small
# install.packages("ggwordcloud")
library(ggwordcloud)
df <- tibble(
iso_639_3 = c("zho", "wuu", "vie", "urd", "tur", "tha",
"tgl", "tel", "tam", "swa", "spa", "rus",
"pus", "por", "pnb", "pan", "msa", "mar",
"kor", "kan", "jpn", "jav", "ita", "ind",
"hin", "hau", "guj", "fra", "fas", "eng",
"deu", "ben", "arz", "ara"),
word = c("謝謝", "謝謝", "Cảm ơn ông", "بہت شکریہ", "Teşekkür ederim", "ขอบคุณ",
"Salamat", "ధన్యవాదాలు", "நன்றி", "Asante", "Gracias", "Спасибо!",
"شكرًا", "Obrigado", "شکریہ", "ਮੁਰਕੁਪਾ", "Terima kasih", "आभार आहे",
"감사합니다", "ಧನ್ಯವಾದಗಳು", "ありがとう", "Matur nuwun sanget", "Grazie", "Terima kasih",
"धन्यवाद", "Na gode", "આભાર", "Merci", "متشكرم", "Thank you",
"Danke", "ধন্যবাদ", "شكراً", "شكراً"),
name = c("Chinese", "Wu Chinese", "Vietnamese", "Urdu", "Turkish", "Thai",
"Tagalog", "Telugu", "Tamil", "Swahili", "Spanish", "Russian",
"Pushto", "Portuguese", "Western Panjabi", "Panjabi", "Malay", "Marathi",
"Korean", "Kannada", "Japanese", "Javanese", "Italian", "Indonesian",
"Hindi", "Hausa", "Gujarati", "French", "Persian", "English",
"German", "Bengali", "Egyptian Arabic", "Arabic"),
native_speakers = c(1200, 80, 75, 67, 78.5, 28,
28, 81, 69, 8, 480, 154,
55, 220, 120, 120, 77, 83,
77.2, 69, 125, 82, 90, 43,
322, 43.7, 55, 76.8, 60, 400,
95, 260, 65, 245),
speakers = c(1200, 80, 75, 67, 88, 72,
73, 81, 77, 98, 555, 239,
55, 243, 120, 120, 277, 83,
77.2, 69, 125, 82, 114, 199,
442, 63.2, 55, 350.8, 110, 800,
107.5, 280, 65, 515)
)
set.seed(1)
ggplot(df, aes(label = word)) +
geom_text_wordcloud() +
theme_minimal()
set.seed(1)
ggplot(df, aes(label = word, size = speakers)) +
geom_text_wordcloud() +
theme_minimal()
set.seed(1)
ggplot(df, aes(label = word, size = speakers)) +
geom_text_wordcloud() +
theme_minimal()
set.seed(1)
ggwordcloud(words = df$word, freq = df$speakers)
set.seed(1)
ggplot(df, aes(label = word, size = speakers)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
library(ggforce)
library(ggforce)
set.seed(1)
ggplot(df, aes(label = word, size = speakers)) +
geom_text_wordcloud(rm_outside = TRUE) +
scale_size_area(max_size = 60) +
theme_minimal()
set.seed(1)
# Data
df <- thankyou_words_small
df$angle <- sample(c(0, 45, 60, 90, 120, 180), nrow(df), replace = TRUE)
ggplot(df, aes(label = word, size = speakers, angle = angle)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
set.seed(1)
ggplot(df, aes(label = word, size = speakers)) +
geom_text_wordcloud(shape = "diamond") +
scale_size_area(max_size = 20) +
theme_minimal()
set.seed(1)
ggplot(df, aes(label = word, size = speakers)) +
geom_text_wordcloud(shape = "star") +
scale_size_area(max_size = 20) +
theme_minimal()
# Normalisasi data numerik untuk radar chart
normalize <- function(x) {
(x - min(x)) / (max(x) - min(x)) * 10
}
data_cars_norm <- data_cars %>%
mutate(across(c(mpg, hp, drat, wt, qsec, cc), normalize))
# Menyiapkan data untuk fmsb
max_min <- data.frame(
matrix(rep(c(10, 0),
each = ncol(data_cars_norm) - 1),
nrow = 2, byrow = TRUE)
)
colnames(max_min) <- colnames(data_cars_norm)[-1]
data_selected <- data_cars_norm %>%
filter(car_name %in% c("Mazda RX4", "Datsun 710", "Hornet 4 Drive"))
data_radar <- rbind(max_min, data_selected[-1])
# Plot radar chart
radarchart(data_radar,
axistype = 1,        # Menampilkan nilai pada sumbu
caxislabels = c("0", "2", "4", "6", "8", "10"), # Ubah label sumbu
calcex = 1.2,        # Ukuran font untuk label sumbu
cglty = 1,           # Grid line type
cglcol = "gray",     # Grid line color
pcol = c("red", "blue", "green"), # Warna garis untuk tiap mobil
plwd = 2,            # Ketebalan garis
plty = 1,            # Tipe garis
pfcol = c(rgb(1, 0, 0, 0.25), # Warna isi
rgb(0, 0, 1, 0.25),
rgb(0, 1, 0, 0.25)))
legend("topright",
legend = c("Mazda RX4", "Datsun 710", "Hornet 4 Drive"),
bty = "n",
pch = 20,
col = c("red", "blue", "green"),
text.col = "grey25",
pt.cex = 2,  # Ukuran simbol dalam legenda
cex = 1.5)   # Ukuran font pada legenda
?mtcars
View(mtcars)
# viz
chart <-
ggplot(data_cars,
aes(x = cc, y = mpg,
fill = factor(cyl), color = factor(cyl),
shape = factor(trans), size = hp)) +
# Scatterplot
geom_point(stroke = 1, alpha = 0.5) +
# Aes
scale_shape_manual(values = c(21, 23)) +
scale_size_continuous(range = c(1, 10)) +
scale_fill_manual(values = colors) +
scale_color_manual(values = colors) +
# Label
geom_text_repel(
data = label_cars, aes(label = car_name),
size = 6, fontface = "bold", color = "black",
box.padding = 0.5, point.padding = 0.5,
nudge_x = 15,
nudge_y = 2,
segment.color = "black", segment.size = 0.5,
arrow = arrow(length = unit(0.01, "npc"))
) +
# Setting
labs(title = "Efek Mesin & Transmisi terhadap Efisiensi BBM",
subtitle = "(Ukuran simbol menunjukkan tenaga mesin (hp))",
x = "Kapasitas Mesin (cc)",
y = "← Boros          Efisiensi BBM          Irit →",
color = "Jumlah Silinder") +
guides(
size = "none",
fill = "none",
shape = guide_legend(title = NULL)
) +
theme_minimal(base_size = 35) + # Global Font size
theme(
axis.title.y = element_text(size = 30, face = "bold"),
axis.text.y = element_text(hjust = 1, face = "bold",
margin = margin(r = 1)),
plot.title = element_text(hjust = -0.2, face = "bold",
margin = margin(b = 5)),
plot.subtitle = element_text(hjust = -0.115, size=25),
# Garis
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
axis.line = element_line(linewidth = 0.5, colour = "black"),
# Legend
legend.title = element_text(size = 30),
legend.position = "top",
legend.direction = "horizontal",
legend.justification = c(-0.25, 0),
legend.margin = margin(t = -10, b = -25),
legend.text = element_text(margin = margin(r = -1, l = -1))
)
chart
# Data
data_cars <- mtcars %>%
mutate(
cyl = as.factor(cyl),
gear = as.factor(gear),
carb = as.factor(carb),
cc = disp * 16.3871, # konversi volume mesin ke cc
engine = factor(ifelse(vs == 0, "V-Engine", "Inline")),
trans = factor(ifelse(am == 0, "Automatic", "Manual"))
) %>%
rownames_to_column(var = "car_name") %>%
select(-disp, -vs, -am)
head(data_cars)
# Pilih 3 mobil yang akan di-highlight
label_cars <- bind_rows(
# Mobil paling irit
data_cars %>% slice_max(mpg, n = 1, with_ties = FALSE),
# Mobil menengah
data_cars %>%
mutate(dist_to_median = abs(mpg - median(mpg))) %>%
slice_min(dist_to_median, n = 1, with_ties = FALSE) %>%
select(-dist_to_median),
# Mobil paling boros
data_cars %>% slice_min(mpg, n = 1, with_ties = FALSE)
) %>%
arrange(desc(mpg))
colors <- c("#21637b", "#967349", "#ad0c1b")
# viz
chart <-
ggplot(data_cars,
aes(x = cc, y = mpg,
fill = factor(cyl), color = factor(cyl),
shape = factor(trans), size = hp)) +
# Scatterplot
geom_point(stroke = 1, alpha = 0.5) +
# Aes
scale_shape_manual(values = c(21, 23)) +
scale_size_continuous(range = c(1, 10)) +
scale_fill_manual(values = colors) +
scale_color_manual(values = colors) +
# Label
geom_text_repel(
data = label_cars, aes(label = car_name),
size = 6, fontface = "bold", color = "black",
box.padding = 0.5, point.padding = 0.5,
nudge_x = 15,
nudge_y = 2,
segment.color = "black", segment.size = 0.5,
arrow = arrow(length = unit(0.01, "npc"))
) +
# Setting
labs(title = "Efek Mesin & Transmisi terhadap Efisiensi BBM",
subtitle = "(Ukuran simbol menunjukkan tenaga mesin (hp))",
x = "Kapasitas Mesin (cc)",
y = "← Boros          Efisiensi BBM          Irit →",
color = "Jumlah Silinder") +
guides(
size = "none",
fill = "none",
shape = guide_legend(title = NULL)
) +
theme_minimal(base_size = 35) + # Global Font size
theme(
axis.title.y = element_text(size = 30, face = "bold"),
axis.text.y = element_text(hjust = 1, face = "bold",
margin = margin(r = 1)),
plot.title = element_text(hjust = -0.2, face = "bold",
margin = margin(b = 5)),
plot.subtitle = element_text(hjust = -0.115, size=25),
# Garis
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
axis.line = element_line(linewidth = 0.5, colour = "black"),
# Legend
legend.title = element_text(size = 30),
legend.position = "top",
legend.direction = "horizontal",
legend.justification = c(-0.25, 0),
legend.margin = margin(t = -10, b = -25),
legend.text = element_text(margin = margin(r = -1, l = -1))
)
chart
# Simpan Chart
ggsave("Chart/01_Scatterplot.png", chart, dpi = 300, height = 5, width = 9)
# viz
chart <-
ggplot(data_cars,
aes(x = cc, y = mpg,
fill = factor(cyl), color = factor(cyl),
shape = factor(trans), size = hp)) +
# Scatterplot
geom_point(stroke = 1, alpha = 0.5) +
# Aes
scale_shape_manual(values = c(21, 23)) +
scale_size_continuous(range = c(1, 10)) +
scale_fill_manual(values = colors) +
scale_color_manual(values = colors) +
# Label
geom_text_repel(
data = label_cars, aes(label = car_name),
size = 6, fontface = "bold", color = "black",
box.padding = 0.5, point.padding = 0.5,
nudge_x = 15,
nudge_y = 2,
segment.color = "black", segment.size = 0.5,
arrow = arrow(length = unit(0.01, "npc"))
) +
# Setting
labs(title = "Efek Mesin & Transmisi terhadap Efisiensi BBM",
subtitle = "(Ukuran simbol menunjukkan tenaga mesin (hp))",
x = "Kapasitas Mesin (cc)",
y = "← Boros          Efisiensi BBM          Irit →",
color = "Jumlah Silinder") +
guides(
size = "none",
fill = "none",
shape = guide_legend(title = NULL)
) +
theme_minimal(base_size = 35) + # Global Font size
theme(
axis.title.y = element_text(size = 30, face = "bold"),
axis.text.y = element_text(hjust = 1, face = "bold",
margin = margin(r = 1)),
plot.title = element_text(hjust = -0.2, face = "bold",
margin = margin(b = 5)),
plot.subtitle = element_text(hjust = -0.115, size=25),
# Garis
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
axis.line = element_line(linewidth = 0.5, colour = "black"),
# Legend
legend.title = element_text(size = 30),
legend.position = "top",
legend.direction = "horizontal",
legend.justification = c(-0.25, 0),
legend.margin = margin(t = -10, b = -25),
legend.text = element_text(margin = margin(r = -1, l = -1))
)
chart
# Simpan Chart
ggsave("Chart/01_Scatterplot.png", chart, dpi = 300, height = 5, width = 9)
